{"version":3,"file":"static/js/614.359da850.chunk.js","mappings":"0RAqGA,EA9FqB,WACnB,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBb,EAAR,EAAQA,KAAMc,EAAd,EAAcA,MACd,OAAQd,GACN,IAAK,OACHC,EAAQa,GACR,MACF,IAAK,QACHX,EAASW,GACT,MACF,IAAK,WACHT,EAAYS,GACZ,MACF,QACEC,QAAQC,KAAR,6BAAmChB,EAAnC,MAEL,EAaKiB,EAAQ,WACZhB,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EACD,OACE,+BACE,iBAAMa,SAlBW,SAAAN,GACnBA,EAAEO,iBACFV,GACEW,EAAAA,EAAAA,IAAS,CACPpB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,KAGJa,GACD,EAQG,UACE,UAACI,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,cACTC,IAAK,EACLC,UAAW,EACXC,aAAc,EACdC,EAAG,EACHC,SAAU,KAPd,WAUE,SAACC,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,OACLjC,KAAK,OACLc,MAAOd,EACPkC,SAAUvB,KAGZ,SAACkB,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,QACLjC,KAAK,QACLc,MAAOZ,EACPgC,SAAUvB,KAGZ,SAACkB,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,WACLjC,KAAK,WACLc,MAAOV,EACP8B,SAAUvB,KAGZ,SAACwB,EAAA,EAAD,CAAQJ,QAAQ,YAAYE,KAAK,SAASG,SAAU9B,EAApD,sBAGA,SAAC,KAAD,CAAkB+B,GAAG,SAArB,0BAKT,ECxFD,EARiB,WACf,OACE,0BACE,SAAC,EAAD,KAGL,C,+HCNYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBjC,EAAkB,SAAA+B,GAAK,OAAIA,EAAMC,SAASlC,SAAnB,EAIvBoC,GAAwBC,EAAAA,EAAAA,IACnC,CAACL,EAAgBM,EAAAA,IACjB,SAACJ,EAAUK,GACT,OAAOL,EAASK,QAAO,SAAAC,GAAO,OAC5BA,EAAQ9C,KAAK+C,cAAcC,SAASH,EAAOE,cADf,GAG/B,G,uDCfI,IAAMH,EAAe,SAAAL,GAAK,OAAIA,EAAMM,OAAOA,MAAjB,C","sources":["components/RegisterForm/RegisterForm.jsx","components/pages/Register.jsx","components/redux/contacts/selectors.js","components/redux/filter/selectors.js"],"sourcesContent":["import { Button, FormGroup, TextField } from '@mui/material';\nimport { StyledSimpleLink } from 'components/Commons/Commons.styled';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { register } from '../redux/auth/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nconst RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        console.warn(`There is no input: ${name}!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormGroup\n          sx={{\n            display: 'inline-flex',\n            gap: 1,\n            boxShadow: 1,\n            borderRadius: 2,\n            p: 2,\n            minWidth: 320,\n          }}\n        >\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            required\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n\n          <TextField\n            label=\"Email\"\n            variant=\"outlined\"\n            required\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            required\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n\n          <Button variant=\"contained\" type=\"submit\" disabled={isLoading}>\n            Sign Up\n          </Button>\n          <StyledSimpleLink to=\"/login\">Log In</StyledSimpleLink>\n        </FormGroup>\n      </form>\n    </>\n  );\n};\n\nexport default RegisterForm;\n","import RegisterForm from 'components/RegisterForm/RegisterForm';\nimport React from 'react';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","export const selectFilter = state => state.filter.filter;\n"],"names":["useState","name","setName","email","setEmail","password","setPassword","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","handleChange","e","target","value","console","warn","reset","onSubmit","preventDefault","register","FormGroup","sx","display","gap","boxShadow","borderRadius","p","minWidth","TextField","label","variant","required","type","onChange","Button","disabled","to","selectContacts","state","contacts","items","selectVisibleContacts","createSelector","selectFilter","filter","contact","toLowerCase","includes"],"sourceRoot":""}
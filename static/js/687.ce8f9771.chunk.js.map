{"version":3,"file":"static/js/687.ce8f9771.chunk.js","mappings":"0RAqFA,EA9EkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAExBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,OAAQD,GACN,IAAK,QACHX,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACEC,QAAQC,KAAR,6BAAmCH,EAAnC,MAEL,EAaKI,EAAQ,WACZf,EAAS,IACTE,EAAY,GACb,EAED,OACE,iBAAMc,SAjBa,SAAAP,GACnBA,EAAEQ,iBACFX,GACEY,EAAAA,EAAAA,IAAM,CACJnB,MAAAA,EACAE,SAAAA,KAGJc,GACD,EAQC,UACE,UAACI,EAAA,EAAD,CACEC,GAAI,CACFC,QAAS,cACTC,IAAK,EACLC,UAAW,EACXC,aAAc,EACdC,EAAG,EACHC,SAAU,KAPd,WAUE,SAACC,EAAA,EAAD,CACEC,MAAM,QACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,QACLpB,KAAK,QACLC,MAAOb,EACPiC,SAAUxB,KAGZ,SAACmB,EAAA,EAAD,CACEC,MAAM,WACNC,QAAQ,WACRC,UAAQ,EACRC,KAAK,WACLpB,KAAK,WACLC,MAAOX,EACP+B,SAAUxB,KAGZ,SAACyB,EAAA,EAAD,CAAQJ,QAAQ,YAAYE,KAAK,SAASG,SAAU/B,EAApD,oBAGA,SAAC,KAAD,CAAkBgC,GAAG,YAArB,yBAIP,ECxED,EARc,WACZ,OACE,0BACE,SAAC,EAAD,KAGL,C,+HCNYC,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEtBlC,EAAkB,SAAAgC,GAAK,OAAIA,EAAMC,SAASnC,SAAnB,EAIvBqC,GAAwBC,EAAAA,EAAAA,IACnC,CAACL,EAAgBM,EAAAA,IACjB,SAACJ,EAAUK,GACT,OAAOL,EAASK,QAAO,SAAAC,GAAO,OAC5BA,EAAQjC,KAAKkC,cAAcC,SAASH,EAAOE,cADf,GAG/B,G,uDCfI,IAAMH,EAAe,SAAAL,GAAK,OAAIA,EAAMM,OAAOA,MAAjB,C","sources":["components/LoginForm/LoginForm.jsx","components/pages/Login.jsx","components/redux/contacts/selectors.js","components/redux/filter/selectors.js"],"sourcesContent":["import { Button, FormGroup, TextField } from '@mui/material';\nimport { StyledSimpleLink } from 'components/Commons/Commons.styled';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from '../redux/auth/operations';\nimport { selectIsLoading } from '../redux/contacts/selectors';\n\nconst LoginForm = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        console.warn(`There is no input: ${name}!`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(\n      logIn({\n        email,\n        password,\n      })\n    );\n    reset();\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormGroup\n        sx={{\n          display: 'inline-flex',\n          gap: 1,\n          boxShadow: 1,\n          borderRadius: 2,\n          p: 2,\n          minWidth: 320,\n        }}\n      >\n        <TextField\n          label=\"Email\"\n          variant=\"outlined\"\n          required\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          onChange={handleChange}\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          required\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          onChange={handleChange}\n        />\n\n        <Button variant=\"contained\" type=\"submit\" disabled={isLoading}>\n          LogIn\n        </Button>\n        <StyledSimpleLink to=\"/register\">Sign Up</StyledSimpleLink>\n      </FormGroup>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import LoginForm from 'components/LoginForm/LoginForm';\nimport React from 'react';\n\nconst Login = () => {\n  return (\n    <div>\n      <LoginForm />\n    </div>\n  );\n};\n\nexport default Login;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from '../filter/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","export const selectFilter = state => state.filter.filter;\n"],"names":["useState","email","setEmail","password","setPassword","isLoading","useSelector","selectIsLoading","dispatch","useDispatch","handleChange","e","target","name","value","console","warn","reset","onSubmit","preventDefault","logIn","FormGroup","sx","display","gap","boxShadow","borderRadius","p","minWidth","TextField","label","variant","required","type","onChange","Button","disabled","to","selectContacts","state","contacts","items","selectVisibleContacts","createSelector","selectFilter","filter","contact","toLowerCase","includes"],"sourceRoot":""}